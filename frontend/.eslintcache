[{"/home/yollotl/reference/frontend/src/index.tsx":"1","/home/yollotl/reference/frontend/src/reportWebVitals.ts":"2","/home/yollotl/reference/frontend/src/App.tsx":"3","/home/yollotl/reference/frontend/src/arr.tsx":"4","/home/yollotl/reference/frontend/src/components/cards/Cards.tsx":"5","/home/yollotl/reference/frontend/src/components/navbar/navbar.jsx":"6","/home/yollotl/reference/frontend/src/components/preview/Preview.jsx":"7","/home/yollotl/reference/frontend/src/components/preview/Opciones.tsx":"8","/home/yollotl/reference/frontend/src/components/MediaQuery/MediaQuery.tsx":"9","/home/yollotl/reference/frontend/src/Fusion.jsx":"10","/home/yollotl/reference/frontend/src/components/login/login.tsx":"11"},{"size":535,"mtime":1617601339980,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1617407179920,"results":"14","hashOfConfig":"13"},{"size":3737,"mtime":1617601120612,"results":"15","hashOfConfig":"13"},{"size":1142,"mtime":1617407179920,"results":"16","hashOfConfig":"13"},{"size":861,"mtime":1617407179920,"results":"17","hashOfConfig":"13"},{"size":441,"mtime":1617407179936,"results":"18","hashOfConfig":"13"},{"size":3621,"mtime":1617407486554,"results":"19","hashOfConfig":"13"},{"size":599,"mtime":1617407179936,"results":"20","hashOfConfig":"13"},{"size":495,"mtime":1617407179936,"results":"21","hashOfConfig":"13"},{"size":910,"mtime":1617677217193,"results":"22","hashOfConfig":"13"},{"size":308,"mtime":1617601132992,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"1a1bu05",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yollotl/reference/frontend/src/index.tsx",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Fusion from './Fusion';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Fusion/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/yollotl/reference/frontend/src/reportWebVitals.ts",[],["53","54"],"/home/yollotl/reference/frontend/src/App.tsx",["55","56","57","58"],"import React from 'react';\nimport axios from 'axios';\nimport { Layout, Menu } from 'antd';\nimport { Input, AutoComplete } from 'antd';\nimport './App.css';\nimport Preview from './components/preview/Preview';\nimport Navbar from './components/navbar/navbar';\nimport Cards from './components/cards/Cards';\nimport arr from './arr';\nconst { Sider } = Layout;\nfunction App(props: {count :number}) { \n    const [list, setList] = React.useState(arr); \n    const [text, setText] = React.useState(\"\"); \n    const [prec, setPrec] = React.useState(\"\");\n    const [prev, setPrev] = React.useState(\"\");\n    const [display, setDisplay] = React.useState(false);\n    const [idex, setIdx] = React.useState(0);\n    function loadData(){\n        axios.get(\"/api\")\n            .then(response => {\n                setList(response.data)\n            })\n            .catch( () => console.log(\"F\"));\n    }\n    function submit(){\n        axios( {\n            method:'POST',\n            url:'/api/submit',\n            data : {\n                author: \"yollotl\",\n                content: text\n            }\n        }\n        );\n    }\n    function handleId(Mov:number){\n        let new_idex = 0;\n        if(Mov === 1)\n            new_idex = (idex + 1)%list.length;\n        else\n            new_idex = ((idex )%list.length + list.length)%list.length;\n        if( new_idex >= 0 && new_idex < list.length){\n            setIdx(new_idex);\n            setPrev(list[idex].content);\n        }\n    }\n\n    function handleRemove(id:number) {\n        const newList = list;\n            newList.splice(id,1);\n            //newList.filter((item) => item.id !== id);\n        setList(newList);\n    }\n    function handleNewText(newText:string,estado:number) {\n        let aux = prec;\n        if(estado === 1){\n            setPrec(newText);\n        }else{\n            if(estado===2){\n                setPrev(newText);    \n            }else{\n                if( aux === \"\")\n                    aux= newText;\n                else{\n                    aux+= '\\n' + newText;\n                }\n                setText(aux);\n            }\n        }\n    }\n    function handleDisplay(val:boolean){\n       setDisplay(val); \n    }\n    return (\n        <>\n            <body>\n                <Navbar/>\n                <Sider\n                    style={{\n                        overflowX: 'auto',\n                            height: '100vh',\n                            position: 'fixed',\n                            left: 0, \n                    }} className=\"barra\"> \n                    {list.length\n                    ?   <List list={list} \n                        onDisplay={handleDisplay}  \n                        onWrite={handleNewText} \n                        onRemove={handleRemove}/>\n                    : <h2 className=\"banner_vacio\" >\n                        vacia\n                    </h2>\n                    }\n                </Sider>\n                <main>\n                    <button onClick={()=>submit()}>load</button>\n                    <Preview \n                        display={display} \n                        preview={prev} \n                        onDisplay={handleDisplay} \n                        onWrite={handleNewText} \n                        val={text}\n                        onNext={handleId}\n                    />\n                </main>\n\n            </body>\n        </>\n    );\n}\n\nexport default App;\nconst List = (props:{list:any, onRemove:any, onWrite:any,onDisplay:any}) => (\n    <>\n        {props.list.map((x:any,index:number) => (\n            <Cards content={x.content} \n                id ={index} \n                onRemove={props.onRemove} \n                onDisplay={props.onDisplay} \n                onWrite={props.onWrite}/>\n        ))}\n    </>\n);\n\n","/home/yollotl/reference/frontend/src/arr.tsx",["59"],"import React from 'react';\n\nlet arr = [\n    {\n        \"topic\":\"binary search\",\n        \"content\" :`\ncou = 0\nmap = Dict{Int32, Int32}()  \nban = 1\nwhile ban == 1\n    for a in text\n        num= a[2:end]\n        num = parse(Int32,num)\n        if a[1] == '-'\n            num*=-1\n        end\n        global cou += num\n        if haskey(map , cou) == true\n            global ban = 0\n            break\n        else\n            push!(map, cou => 3)\n        end\n    end\nend\nprintln(cou)`,\n        \"id\":0,\n        \"author\":\"yolo\",\n    },\n    {\n        \"topic\":\"earch\",\n        \"id\":1,\n        \"content\":\"l\",\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"o \", \n        \"id\":9,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"const Cards = () => ( <Card> <p> skdjfskdjf</p> \", \n        \"id\":7,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"const Cards = () => ( <Card> <p> skdjfskdjf</p> \", \n        \"id\":5,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"a\", \n        \"id\":3,\n        \"author\":\"yolo\",\n    },];\nexport default arr;\n","/home/yollotl/reference/frontend/src/components/cards/Cards.tsx",["60","61"],"import React from 'react';\nimport './Cards.css'\nimport { Card } from 'antd';\nimport { Button } from 'antd';\nconst p = `const Cards = () => (\n    <Card>\n        <p> skdjfskdjf</p>\n`\nconst Cards = (props: {id:number, content:string, onRemove:any,onWrite:any, onDisplay:any}) => (\n    <Card className = \"card\" >\n        <p> skkdjf</p>\n        <code>\n            {props.content?props.content.substr(0,30)+'...':\"\"}\n        </code>\n        <Button onClick={ \n            () =>( props.onRemove(props.id), \n                props.onWrite(props.content, 0))}\n        size =\"middle\" block ={true} type=\"dashed\"> Agregar</Button>\n    <Button onClick={ \n        () =>( props.onDisplay(true),\n            props.onWrite(props.content, 2))}\n            size =\"middle\" block ={true} type=\"dashed\"> \n            Preview\n        </Button>\n    </Card>\n); \nexport default Cards;\n\n\n","/home/yollotl/reference/frontend/src/components/navbar/navbar.jsx",[],["62","63"],"/home/yollotl/reference/frontend/src/components/preview/Preview.jsx",[],"/home/yollotl/reference/frontend/src/components/preview/Opciones.tsx",[],"/home/yollotl/reference/frontend/src/components/MediaQuery/MediaQuery.tsx",[],"/home/yollotl/reference/frontend/src/Fusion.jsx",["64"],"/home/yollotl/reference/frontend/src/components/login/login.tsx",[],{"ruleId":"65","severity":1,"message":"66","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":11},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":3,"column":18,"nodeType":"67","messageId":"68","endLine":3,"endColumn":22},{"ruleId":"65","severity":1,"message":"74","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"75","line":4,"column":17,"nodeType":"67","messageId":"68","endLine":4,"endColumn":29},{"ruleId":"65","severity":1,"message":"76","line":18,"column":14,"nodeType":"67","messageId":"68","endLine":18,"endColumn":22},{"ruleId":"65","severity":1,"message":"77","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":16,"column":44,"nodeType":"80","messageId":"81","endLine":16,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":20,"column":37,"nodeType":"80","messageId":"81","endLine":20,"endColumn":38},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"82","severity":1,"message":"83","line":8,"column":5,"nodeType":"67","messageId":"68","endLine":8,"endColumn":9},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'Menu' is defined but never used.","'Input' is defined but never used.","'AutoComplete' is defined but never used.","'loadData' is defined but never used.","'React' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]