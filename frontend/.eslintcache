[{"/home/yollotl/reference/frontend/src/index.tsx":"1","/home/yollotl/reference/frontend/src/App.tsx":"2","/home/yollotl/reference/frontend/src/arr.tsx":"3","/home/yollotl/reference/frontend/src/components/cards/Cards.tsx":"4","/home/yollotl/reference/frontend/src/components/navbar/navbar.jsx":"5","/home/yollotl/reference/frontend/src/components/preview/Preview.jsx":"6","/home/yollotl/reference/frontend/src/components/preview/Opciones.tsx":"7","/home/yollotl/reference/frontend/src/components/MediaQuery/MediaQuery.tsx":"8","/home/yollotl/reference/frontend/src/Fusion.jsx":"9","/home/yollotl/reference/frontend/src/components/login/login.tsx":"10","/home/yollotl/reference/frontend/src/components/routes/routes.tsx":"11","/home/yollotl/reference/frontend/src/Home.tsx":"12"},{"size":631,"mtime":1618703407207,"results":"13","hashOfConfig":"14"},{"size":3605,"mtime":1618610868589,"results":"15","hashOfConfig":"14"},{"size":1114,"mtime":1618698047117,"results":"16","hashOfConfig":"14"},{"size":860,"mtime":1618697869227,"results":"17","hashOfConfig":"14"},{"size":1517,"mtime":1618704615953,"results":"18","hashOfConfig":"14"},{"size":3621,"mtime":1617407486554,"results":"19","hashOfConfig":"14"},{"size":599,"mtime":1617407179936,"results":"20","hashOfConfig":"14"},{"size":495,"mtime":1617407179936,"results":"21","hashOfConfig":"14"},{"size":495,"mtime":1618697980264,"results":"22","hashOfConfig":"14"},{"size":374,"mtime":1618704651326,"results":"23","hashOfConfig":"14"},{"size":428,"mtime":1618161851100,"results":"24","hashOfConfig":"14"},{"size":1234,"mtime":1618699206633,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a1bu05",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/yollotl/reference/frontend/src/index.tsx",[],"/home/yollotl/reference/frontend/src/App.tsx",["56"],"import React from 'react';\nimport axios from 'axios';\nimport { Layout } from 'antd';\nimport './App.css';\nimport Preview from './components/preview/Preview';\nimport Navbar from './components/navbar/navbar';\nimport Cards from './components/cards/Cards';\nimport arr from './arr';\nconst { Sider } = Layout;\nfunction App() { \n    const [list, setList] = React.useState(arr); \n    const [text, setText] = React.useState(\"\"); \n    const [prec, setPrec] = React.useState(\"\");\n    const [prev, setPrev] = React.useState(\"\");\n    const [display, setDisplay] = React.useState(false);\n    const [idex, setIdx] = React.useState(0);\n    function loadData(){\n        axios.get(\"/api\")\n            .then(response => {\n                setList(response.data)\n            })\n            .catch( () => console.log(\"F\"));\n    }\n    function submit(){\n        axios( {\n            method:'POST',\n            url:'/api/submit',\n            data : {\n                author: \"yollotl\",\n                content: prec\n            }\n        }\n        );\n    }\n    function handleId(Mov:number){\n        let new_idex = 0;\n        if(Mov === 1)\n            new_idex = (idex + 1)%list.length;\n        else\n            new_idex = ((idex )%list.length + list.length)%list.length;\n        if( new_idex >= 0 && new_idex < list.length){\n            setIdx(new_idex);\n            setPrev(list[idex].content);\n        }\n    }\n\n    function handleRemove(id:number) {\n        const newList = list;\n        newList.splice(id,1);\n        setList(newList);\n    }\n    function handleNewText(newText:string,estado:number) {\n        let aux = prec;\n        if(estado === 1){\n            setPrec(newText);\n        }else{\n            if(estado===2){\n                setPrev(newText);    \n            }else{\n                if( aux === \"\")\n                    aux= newText;\n                else{\n                    aux+= '\\n' + newText;\n                }\n                setText(aux);\n            }\n        }\n    }\n    function handleDisplay(val:boolean){\n       setDisplay(val); \n    }\n    return (\n        <>\n            <body>\n                <Navbar/>\n                <Sider\n                    style={{\n                        overflowX: 'auto',\n                            height: '100vh',\n                            position: 'fixed',\n                            left: 0, \n                    }} className=\"barra\"> \n                    {list.length\n                    ?   <List list={list} \n                        onDisplay={handleDisplay}  \n                        onWrite={handleNewText} \n                        onRemove={handleRemove}/>\n                    : <h2 className=\"banner_vacio\" >\n                        vacia\n                    </h2>\n                    }\n                </Sider>\n                <main>\n                    <button onClick={()=>submit()}>load</button>\n                    <Preview \n                        display={display} \n                        preview={prev} \n                        onDisplay={handleDisplay} \n                        onWrite={handleNewText} \n                        val={text}\n                        onNext={handleId}\n                    />\n                </main>\n\n            </body>\n        </>\n    );\n}\n\nexport default App;\nconst List = (props:{list:any, onRemove:any, onWrite:any,onDisplay:any}) => (\n    <>\n        {props.list.map((x:any,index:number) => (\n            <Cards content={x.content} \n                id ={index} \n                onRemove={props.onRemove} \n                onDisplay={props.onDisplay} \n                onWrite={props.onWrite}/>\n        ))}\n    </>\n);\n\n","/home/yollotl/reference/frontend/src/arr.tsx",[],"/home/yollotl/reference/frontend/src/components/cards/Cards.tsx",["57","58"],"import React from 'react';\nimport './Cards.css'\nimport { Card } from 'antd';\nimport { Button } from 'antd';\nconst p = `const Cards = () => (\n    <Card>\n        <p> skdjfskdjf</p>\n`\nconst Cards = (props: {id:number, content:string, onRemove:any,onWrite:any, onDisplay:any}) => (\n    <Card className = \"card\" >\n        <p> skkdjf</p>\n        <code>\n            {props.content?props.content.substr(0,30)+'...':\"\"}\n        </code>\n        <Button onClick={ \n            () =>( props.onRemove(props.id),\n                props.onWrite(props.content, 0))}\n        size =\"middle\" block ={true} type=\"dashed\"> Agregar</Button>\n    <Button onClick={ \n        () =>( props.onDisplay(true),\n            props.onWrite(props.content, 2))}\n            size =\"middle\" block ={true} type=\"dashed\"> \n            Preview\n        </Button>\n    </Card>\n); \nexport default Cards;\n\n\n",["59","60"],"/home/yollotl/reference/frontend/src/components/navbar/navbar.jsx",[],"/home/yollotl/reference/frontend/src/components/preview/Preview.jsx",[],["61","62"],"/home/yollotl/reference/frontend/src/components/preview/Opciones.tsx",[],"/home/yollotl/reference/frontend/src/components/MediaQuery/MediaQuery.tsx",[],"/home/yollotl/reference/frontend/src/Fusion.jsx",[],"/home/yollotl/reference/frontend/src/components/login/login.tsx",[],"/home/yollotl/reference/frontend/src/components/routes/routes.tsx",["63"],"import React from 'react';\nimport Login from '../login/login';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst Rot = () =>{\n    return (\n        <>\n            <Router>\n            <Switch>\n                <Route path=\"/static/login\">\n                    <Login/>\n                </Route>\n            </Switch>\n        </Router>\n        </>\n    )\n};\nexport default Rot;\n\n\n",["64","65"],"/home/yollotl/reference/frontend/src/Home.tsx",[],{"ruleId":"66","severity":1,"message":"67","line":17,"column":14,"nodeType":"68","messageId":"69","endLine":17,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":16,"column":44,"nodeType":"72","messageId":"73","endLine":16,"endColumn":45},{"ruleId":"70","severity":1,"message":"71","line":20,"column":37,"nodeType":"72","messageId":"73","endLine":20,"endColumn":38},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"66","severity":1,"message":"78","line":7,"column":5,"nodeType":"68","messageId":"69","endLine":7,"endColumn":9},{"ruleId":"74","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},"@typescript-eslint/no-unused-vars","'loadData' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'Link' is defined but never used.",["81"],["82"],"no-global-assign","no-unsafe-negation"]