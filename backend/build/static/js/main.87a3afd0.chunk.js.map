{"version":3,"sources":["components/MediaQuery/MediaQuery.tsx","components/preview/Opciones.tsx","components/preview/Preview.jsx","components/navbar/navbar.jsx","components/cards/Cards.tsx","arr.tsx","App.tsx","components/login/login.tsx","Fusion.jsx","reportWebVitals.ts","index.tsx"],"names":["MediaQuery","query","useState","matches","setMatches","useEffect","media","window","matchMedia","listener","addListener","removeListener","Langs","label","value","Opciones","props","onClick","onElection","map","data","require","Preview","Wide","lang1","setLang1","lang2","setLang2","className","display","direction","style","flexGrow","event","target","console","log","onDisplay","onNext","preview","options","mode","theme","lineNumbers","autoCursor","readOnly","onChange","editor","onWrite","val","Navbar","id","to","Cards","content","substr","onRemove","size","block","type","arr","Sider","Layout","App","React","list","setList","text","setText","prec","setPrec","prev","setPrev","setDisplay","idex","setIdx","handleNewText","newText","estado","aux","handleDisplay","overflowX","height","position","left","length","newList","splice","axios","method","url","author","Mov","new_idex","List","x","index","Login","Fusion","exact","path","component","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87a3afd0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n const MediaQuery= (query:any) =>\n{\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\nexport default MediaQuery;\n","import React from 'react'\n\nconst Langs = [\n    {label:\"C++\",value:\"clike\"},\n    {label:\"Rust\",value:\"rust\"},\n    {label:\"Python\",value:\"python\"}\n];\nconst Opciones = (props:{value:string,onElection:any}) => {\n    return (\n        <>\n            <select value={props.value} onClick={props.onElection}>\n                {\n                    Langs.map( (data) => (\n                        <option value={data.value}>\n                            {data.label}\n                        </option>\n                    ))\n                }\n            </select>\n        </>\n    );\n}\nexport default Opciones;\n\n\n","import React ,{useState} from 'react';\nimport ResizePanel from \"react-resize-panel\";\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport './Preview.css'\nimport MediaQuery from '../MediaQuery/MediaQuery'\nimport Opciones from './Opciones'\nrequire('codemirror/mode/clike/clike');\nrequire('codemirror/mode/rust/rust');\nrequire('codemirror/mode/python/python');\nrequire('codemirror/theme/material.css'); // muy importante no quitar\nrequire('codemirror/lib/codemirror.css');\n\nconst Preview = (props:{display:boolean,preview:string,val:string, onWrite:any,onDisplay:any,onNext:any}) =>{\n    let Wide = MediaQuery('(max-width: 800px)');\n    const [lang1, setLang1] = useState('python');\n    const [lang2, setLang2] = useState('python');\n    function onElection1( event:any){\n        setLang1(event.target.value);\n        console.log(lang1);\n    }\n    function onElection2( event:any){\n        setLang2(event.target.value);\n        console.log(lang2);\n    }\n    return (\n        <>\n            <div className=\"container\">\n                {props.display &&  /* si quieren ver el preview o no */\n                <ResizePanel  direction={Wide?\"s\":\"e\"} style={{flexGrow:'1'}}>\n                    <div className=\"area1\">\n                        <Opciones \n                            value={lang1} \n                            onElection={onElection1}/>\n                        <button onClick={ () => \n                            {props.onDisplay(false)}}>\n                            Quitar preview\n                        </button>\n                        <button onClick={()=>props.onNext(0)}>←</button> {/*0 para ir a la izquierda*/}\n                            <button onClick={()=>props.onNext(1)}>frontend→</button>  {/* 1 para la derecha */}\n                                <CodeMirror\n                                    value={props.preview}\n                                    options={{\n                                        mode:lang1,\n                                            theme: 'material',\n                                            lineNumbers: true,\n                                            autoCursor:false,\n                                            readOnly:\"nocursor\"\n                                    }}\n                                    onChange={(editor, data, value) => {\n                                        props.onWrite(value,2);\n                                    }}\n                                />\n                            </div>\n                    </ResizePanel> \n                }\n                        <div key=\"bro\" className=\"area1\"  >\n                            <Opciones \n                                value={lang2} \n                                onElection={onElection2}/>\n                            <button onClick={() => {props.onDisplay(true)}}>\n                                ver preview\n                            </button>\n                            <CodeMirror\n                                options={{\n                                    mode:lang2,\n                                        theme: 'material',\n                                        lineNumbers: true,\n                                        autoCursor:false,\n                                }}\n                                value={props.val}\n                                onChange={(editor, data, value) => {\n                                    props.onWrite(value,1)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </>\n            );\n};\nexport default Preview;\n\n","import React from 'react';\nimport './navbar.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nconst Navbar = () => {\n   return( \n   <header>\n       <div id=\"navbar\">\n               <ul>\n                   <input></input>\n                   <li>\n                       <Link to=\"/static/login/\">\n                           LOGIN\n                       </Link>\n                   </li>\n                   <li>Subir Código </li>\n                   <li>Convertir a PDF </li>\n                   <li>Ajustes</li>\n               </ul>\n       </div>\n   </header>\n         );\n};\nexport default Navbar;\n","import React from 'react';\nimport './Cards.css'\nimport { Card } from 'antd';\nimport { Button } from 'antd';\nconst p = `const Cards = () => (\n    <Card>\n        <p> skdjfskdjf</p>\n`\nconst Cards = (props: {id:number, content:string, onRemove:any,onWrite:any, onDisplay:any}) => (\n    <Card className = \"card\" >\n        <p> skkdjf</p>\n        <code>\n            {props.content?props.content.substr(0,30)+'...':\"\"}\n        </code>\n        <Button onClick={ \n            () =>( props.onRemove(props.id), \n                props.onWrite(props.content, 0))}\n        size =\"middle\" block ={true} type=\"dashed\"> Agregar</Button>\n    <Button onClick={ \n        () =>( props.onDisplay(true),\n            props.onWrite(props.content, 2))}\n            size =\"middle\" block ={true} type=\"dashed\"> \n            Preview\n        </Button>\n    </Card>\n); \nexport default Cards;\n\n\n","import React from 'react';\n\nlet arr = [\n    {\n        \"topic\":\"binary search\",\n        \"content\" :`\ncou = 0\nmap = Dict{Int32, Int32}()  \nban = 1\nwhile ban == 1\n    for a in text\n        num= a[2:end]\n        num = parse(Int32,num)\n        if a[1] == '-'\n            num*=-1\n        end\n        global cou += num\n        if haskey(map , cou) == true\n            global ban = 0\n            break\n        else\n            push!(map, cou => 3)\n        end\n    end\nend\nprintln(cou)`,\n        \"id\":0,\n        \"author\":\"yolo\",\n    },\n    {\n        \"topic\":\"earch\",\n        \"id\":1,\n        \"content\":\"l\",\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"o \", \n        \"id\":9,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"const Cards = () => ( <Card> <p> skdjfskdjf</p> \", \n        \"id\":7,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"const Cards = () => ( <Card> <p> skdjfskdjf</p> \", \n        \"id\":5,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"a\", \n        \"id\":3,\n        \"author\":\"yolo\",\n    },];\nexport default arr;\n","import React from 'react';\nimport axios from 'axios';\nimport { Layout, Menu } from 'antd';\nimport { Input, AutoComplete } from 'antd';\nimport './App.css';\nimport Preview from './components/preview/Preview';\nimport Navbar from './components/navbar/navbar';\nimport Cards from './components/cards/Cards';\nimport arr from './arr';\nconst { Sider } = Layout;\nfunction App(props: {count :number}) { \n    const [list, setList] = React.useState(arr); \n    const [text, setText] = React.useState(\"\"); \n    const [prec, setPrec] = React.useState(\"\");\n    const [prev, setPrev] = React.useState(\"\");\n    const [display, setDisplay] = React.useState(false);\n    const [idex, setIdx] = React.useState(0);\n    function loadData(){\n        axios.get(\"/api\")\n            .then(response => {\n                setList(response.data)\n            })\n            .catch( () => console.log(\"F\"));\n    }\n    function submit(){\n        axios( {\n            method:'POST',\n            url:'/api/submit',\n            data : {\n                author: \"yollotl\",\n                content: text\n            }\n        }\n        );\n    }\n    function handleId(Mov:number){\n        let new_idex = 0;\n        if(Mov === 1)\n            new_idex = (idex + 1)%list.length;\n        else\n            new_idex = ((idex )%list.length + list.length)%list.length;\n        if( new_idex >= 0 && new_idex < list.length){\n            setIdx(new_idex);\n            setPrev(list[idex].content);\n        }\n    }\n\n    function handleRemove(id:number) {\n        const newList = list;\n            newList.splice(id,1);\n            //newList.filter((item) => item.id !== id);\n        setList(newList);\n    }\n    function handleNewText(newText:string,estado:number) {\n        let aux = prec;\n        if(estado === 1){\n            setPrec(newText);\n        }else{\n            if(estado===2){\n                setPrev(newText);    \n            }else{\n                if( aux === \"\")\n                    aux= newText;\n                else{\n                    aux+= '\\n' + newText;\n                }\n                setText(aux);\n            }\n        }\n    }\n    function handleDisplay(val:boolean){\n       setDisplay(val); \n    }\n    return (\n        <>\n            <body>\n                <Navbar/>\n                <Sider\n                    style={{\n                        overflowX: 'auto',\n                            height: '100vh',\n                            position: 'fixed',\n                            left: 0, \n                    }} className=\"barra\"> \n                    {list.length\n                    ?   <List list={list} \n                        onDisplay={handleDisplay}  \n                        onWrite={handleNewText} \n                        onRemove={handleRemove}/>\n                    : <h2 className=\"banner_vacio\" >\n                        vacia\n                    </h2>\n                    }\n                </Sider>\n                <main>\n                    <button onClick={()=>submit()}>load</button>\n                    <Preview \n                        display={display} \n                        preview={prev} \n                        onDisplay={handleDisplay} \n                        onWrite={handleNewText} \n                        val={text}\n                        onNext={handleId}\n                    />\n                </main>\n\n            </body>\n        </>\n    );\n}\n\nexport default App;\nconst List = (props:{list:any, onRemove:any, onWrite:any,onDisplay:any}) => (\n    <>\n        {props.list.map((x:any,index:number) => (\n            <Cards content={x.content} \n                id ={index} \n                onRemove={props.onRemove} \n                onDisplay={props.onDisplay} \n                onWrite={props.onWrite}/>\n        ))}\n    </>\n);\n\n","import React from 'react';\n//import './login.css';\n\nconst Login = () =>{\n    return (\n        <>\n        <label>\n            User\n            <input type=\"text\"/>\n        </label>\n        <label >\n            Password\n            <input type=\"text\"/>\n        </label>\n    </>\n    )\n};\nexport default Login;\n\n","import React from 'react';\nimport App from './App'\nimport Login from './components/login/login'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    withRouter\n} from \"react-router-dom\";\n\nconst Fusion = () =>{\n    return (\n        <>\n                {/*<ul>\n                    <li>\n                        <Link to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/app\">\n                            App\n                        </Link>\n                    </li>\n                </ul>*/}\n            <Switch>\n                <Route exact path=\"/static/login/\" \n                    component={withRouter(Login)}/>\n                <Route path=\"/static/app/\"\n                    component={withRouter(App)}/>\n            </Switch>\n        </>\n    )\n};\nexport default Fusion;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Fusion from './Fusion';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router>      \n      <Fusion/>\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}