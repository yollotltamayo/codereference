{"version":3,"sources":["components/login/login.tsx","components/MediaQuery/MediaQuery.tsx","components/preview/Opciones.tsx","components/preview/Preview.jsx","components/navbar/navbar.jsx","components/cards/Cards.tsx","arr.tsx","App.tsx","Home.tsx","Fusion.jsx","index.tsx"],"names":["Login","onClick","window","location","href","MediaQuery","query","useState","matches","setMatches","useEffect","media","matchMedia","listener","addListener","removeListener","Langs","label","value","Opciones","props","onElection","map","data","require","Preview","Wide","lang1","setLang1","lang2","setLang2","className","display","direction","style","flexGrow","event","target","console","log","onDisplay","onNext","preview","options","mode","theme","lineNumbers","autoCursor","readOnly","onChange","editor","onWrite","val","Navbar","raw","useContext","UserContext","split","user","avatar","id","to","axios","get","then","alert","catch","size","xs","sm","md","lg","xl","xxl","src","Cards","content","substr","onRemove","block","type","arr","Sider","Layout","App","React","list","setList","text","setText","prec","setPrec","prev","setPrev","setDisplay","idex","setIdx","handleNewText","newText","estado","aux","handleDisplay","overflowX","height","position","left","length","newList","splice","method","url","author","Mov","new_idex","List","x","index","createContext","Home","loaded","setLoad","setUser","join","Provider","name","Fusion","exact","path","component","withRouter","appHistory","createBrowserHistory","ReactDOM","render","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.46ba7652.chunk.js","sourcesContent":["import {React} from 'react'\n//import './login.css';\nconst Login = () =>{\n\n    let login = () => {\n        // por alguna razon no funciona si no hay cookies\n        //\n        window.location.href = \"/authorize/first/\";\n    }\n    return (\n        <>\n            <button onClick={login}>\n                Login\n            </button>\n        </>\n    )\n};\nexport default Login;\n\n","import { useState, useEffect } from 'react';\n\n const MediaQuery= (query:any) =>\n{\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addListener(listener);\n    return () => media.removeListener(listener);\n  }, [matches, query]);\n\n  return matches;\n}\nexport default MediaQuery;\n","import React from 'react'\n\nconst Langs = [\n    {label:\"C++\",value:\"clike\"},\n    {label:\"Rust\",value:\"rust\"},\n    {label:\"Python\",value:\"python\"}\n];\nconst Opciones = (props:{value:string,onElection:any}) => {\n    return (\n        <>\n            <select value={props.value} onClick={props.onElection}>\n                {\n                    Langs.map( (data) => (\n                        <option value={data.value}>\n                            {data.label}\n                        </option>\n                    ))\n                }\n            </select>\n        </>\n    );\n}\nexport default Opciones;\n\n\n","import React ,{useState} from 'react';\nimport ResizePanel from \"react-resize-panel\";\nimport {UnControlled as CodeMirror} from 'react-codemirror2'\nimport './Preview.css'\nimport MediaQuery from '../MediaQuery/MediaQuery'\nimport Opciones from './Opciones'\nrequire('codemirror/mode/clike/clike');\nrequire('codemirror/mode/rust/rust');\nrequire('codemirror/mode/python/python');\nrequire('codemirror/theme/material.css'); // muy importante no quitar\nrequire('codemirror/lib/codemirror.css');\n\nconst Preview = (props:{display:boolean,preview:string,val:string, onWrite:any,onDisplay:any,onNext:any}) =>{\n    let Wide = MediaQuery('(max-width: 800px)');\n    const [lang1, setLang1] = useState('python');\n    const [lang2, setLang2] = useState('python');\n    function onElection1( event:any){\n        setLang1(event.target.value);\n        console.log(lang1);\n    }\n    function onElection2( event:any){\n        setLang2(event.target.value);\n        console.log(lang2);\n    }\n    return (\n        <>\n            <div className=\"container\">\n                {props.display &&  /* si quieren ver el preview o no */\n                <ResizePanel  direction={Wide?\"s\":\"e\"} style={{flexGrow:'1'}}>\n                    <div className=\"area1\">\n                        <Opciones \n                            value={lang1} \n                            onElection={onElection1}/>\n                        <button onClick={ () => \n                            {props.onDisplay(false)}}>\n                            Quitar preview\n                        </button>\n                        <button onClick={()=>props.onNext(0)}>←</button> {/*0 para ir a la izquierda*/}\n                            <button onClick={()=>props.onNext(1)}>frontend→</button>  {/* 1 para la derecha */}\n                                <CodeMirror\n                                    value={props.preview}\n                                    options={{\n                                        mode:lang1,\n                                            theme: 'material',\n                                            lineNumbers: true,\n                                            autoCursor:false,\n                                            readOnly:\"nocursor\"\n                                    }}\n                                    onChange={(editor, data, value) => {\n                                        props.onWrite(value,2);\n                                    }}\n                                />\n                            </div>\n                    </ResizePanel> \n                }\n                        <div key=\"bro\" className=\"area1\"  >\n                            <Opciones \n                                value={lang2} \n                                onElection={onElection2}/>\n                            <button onClick={() => {props.onDisplay(true)}}>\n                                ver preview\n                            </button>\n                            <CodeMirror\n                                options={{\n                                    mode:lang2,\n                                        theme: 'material',\n                                        lineNumbers: true,\n                                        autoCursor:false,\n                                }}\n                                value={props.val}\n                                onChange={(editor, data, value) => {\n                                    props.onWrite(value,1)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </>\n            );\n};\nexport default Preview;\n\n","import {useContext,React} from 'react';\nimport {UserContext} from '../../Home';\nimport './navbar.css';\nimport {\n    Link,\n} from \"react-router-dom\";\nimport axios from 'axios';\nimport { Avatar } from 'antd';\nconst Navbar = () => {\n   const raw = useContext(UserContext).split('*');\n    const user = raw[1];\n    const avatar = raw[0];\n    var logOut = () => {\n        axios.get(\"/user/delete/\")\n            .then( (value) => {\n                if(value.data === \"failed\"){\n                alert(\"usuario no existe\")\n                window.location.href = \"/authorize/first\";\n                }\n            })\n            .catch( () => {\n                alert(\"usuario no existe\")\n                window.location.href = \"/authorize/first\";\n\n            })\n    };\n   return( \n   <header>\n       <div id=\"navbar\">\n               <ul>\n                   <input></input>\n                   <li>\n                       <Link to=\"/static/login/\">\n                           LOGIN\n                       </Link>\n                   </li>\n                   <li>Convertir a PDF </li>\n                   <li>{user !== \"\"?user:\"\"}</li>\n                   <li > <button onClick={() => {logOut()}} >LOGOUT</button></li>\n                   <li>\n                       <Avatar\n                           size={{xs:24,sm:32, md: 40, lg: 64, xl: 80, xxl: 100 }}\n                           src={avatar}\n                       />\n                   </li>\n               </ul>\n       </div>\n   </header>\n         );\n};\nexport default Navbar;\n","import React from 'react';\nimport './Cards.css'\nimport { Card } from 'antd';\nimport { Button } from 'antd';\nconst p = `const Cards = () => (\n    <Card>\n        <p> skdjfskdjf</p>\n`\nconst Cards = (props: {id:number, content:string, onRemove:any,onWrite:any, onDisplay:any}) => (\n    <Card className = \"card\" >\n        <p> skkdjf</p>\n        <code>\n            {props.content?props.content.substr(0,30)+'...':\"\"}\n        </code>\n        <Button onClick={ \n            () =>( props.onRemove(props.id),\n                props.onWrite(props.content, 0))}\n        size =\"middle\" block ={true} type=\"dashed\"> Agregar</Button>\n    <Button onClick={ \n        () =>( props.onDisplay(true),\n            props.onWrite(props.content, 2))}\n            size =\"middle\" block ={true} type=\"dashed\"> \n            Preview\n        </Button>\n    </Card>\n); \nexport default Cards;\n\n\n","let arr = [\n    {\n        \"topic\":\"binary search\",\n        \"content\" :`\ncou = 0\nmap = Dict{Int32, Int32}()  \nban = 1\nwhile ban == 1\n    for a in text\n        num= a[2:end]\n        num = parse(Int32,num)\n        if a[1] == '-'\n            num*=-1\n        end\n        global cou += num\n        if haskey(map , cou) == true\n            global ban = 0\n            break\n        else\n            push!(map, cou => 3)\n        end\n    end\nend\nprintln(cou)`,\n        \"id\":0,\n        \"author\":\"yolo\",\n    },\n    {\n        \"topic\":\"earch\",\n        \"id\":1,\n        \"content\":\"l\",\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"o \", \n        \"id\":9,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"const Cards = () => ( <Card> <p> skdjfskdjf</p> \", \n        \"id\":7,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"const Cards = () => ( <Card> <p> skdjfskdjf</p> \", \n        \"id\":5,\n        \"author\":\"yolo\",\n    },{\n        \"topic\":\"earch\",\n        \"content\" :\"a\", \n        \"id\":3,\n        \"author\":\"yolo\",\n    },];\nexport default arr;\n","import React from 'react';\nimport axios from 'axios';\nimport { Layout } from 'antd';\nimport './App.css';\nimport Preview from './components/preview/Preview';\nimport Navbar from './components/navbar/navbar';\nimport Cards from './components/cards/Cards';\nimport arr from './arr';\nconst { Sider } = Layout;\nfunction App() { \n    const [list, setList] = React.useState(arr); \n    const [text, setText] = React.useState(\"\"); \n    const [prec, setPrec] = React.useState(\"\");\n    const [prev, setPrev] = React.useState(\"\");\n    const [display, setDisplay] = React.useState(false);\n    const [idex, setIdx] = React.useState(0);\n    function loadData(){\n        axios.get(\"/api\")\n            .then(response => {\n                setList(response.data)\n            })\n            .catch( () => console.log(\"F\"));\n    }\n    function submit(){\n        axios( {\n            method:'POST',\n            url:'/api/submit',\n            data : {\n                author: \"yollotl\",\n                content: prec\n            }\n        }\n        );\n    }\n    function handleId(Mov:number){\n        let new_idex = 0;\n        if(Mov === 1)\n            new_idex = (idex + 1)%list.length;\n        else\n            new_idex = ((idex )%list.length + list.length)%list.length;\n        if( new_idex >= 0 && new_idex < list.length){\n            setIdx(new_idex);\n            setPrev(list[idex].content);\n        }\n    }\n\n    function handleRemove(id:number) {\n        const newList = list;\n        newList.splice(id,1);\n        setList(newList);\n    }\n    function handleNewText(newText:string,estado:number) {\n        let aux = prec;\n        if(estado === 1){\n            setPrec(newText);\n        }else{\n            if(estado===2){\n                setPrev(newText);    \n            }else{\n                if( aux === \"\")\n                    aux= newText;\n                else{\n                    aux+= '\\n' + newText;\n                }\n                setText(aux);\n            }\n        }\n    }\n    function handleDisplay(val:boolean){\n       setDisplay(val); \n    }\n    return (\n        <>\n            <body>\n                <Navbar/>\n                <Sider\n                    style={{\n                        overflowX: 'auto',\n                            height: '100vh',\n                            position: 'fixed',\n                            left: 0, \n                    }} className=\"barra\"> \n                    {list.length\n                    ?   <List list={list} \n                        onDisplay={handleDisplay}  \n                        onWrite={handleNewText} \n                        onRemove={handleRemove}/>\n                    : <h2 className=\"banner_vacio\" >\n                        vacia\n                    </h2>\n                    }\n                </Sider>\n                <main>\n                    <button onClick={()=>submit()}>load</button>\n                    <Preview \n                        display={display} \n                        preview={prev} \n                        onDisplay={handleDisplay} \n                        onWrite={handleNewText} \n                        val={text}\n                        onNext={handleId}\n                    />\n                </main>\n\n            </body>\n        </>\n    );\n}\n\nexport default App;\nconst List = (props:{list:any, onRemove:any, onWrite:any,onDisplay:any}) => (\n    <>\n        {props.list.map((x:any,index:number) => (\n            <Cards content={x.content} \n                id ={index} \n                onRemove={props.onRemove} \n                onDisplay={props.onDisplay} \n                onWrite={props.onWrite}/>\n        ))}\n    </>\n);\n\n","import {React,createContext, useEffect,useState} from 'react';\nimport axios from 'axios';\nimport Login from './components/login/login'\nimport App from './App';\nexport const UserContext  = createContext(\"\");\nconst Home = () => {\nconst [loaded , setLoad] = useState(false);\nconst [user , setUser] = useState({\n    \"name\":\"\",\n    \"avatar\":\"\",\n});\n    useEffect(()=>{\n         axios.get(\"/user\")\n            .then( (value) => {\n                console.log(value.data);\n                if(value.data === \"false\"){\n                    setLoad(false);\n                }else{\n                var avatar = value.data.avatar.split('\"').join(\"\");\n                var user = value.data.user.split('\"').join(\"\");\n                setUser({\n                    \"name\":user,\n                    \"avatar\":avatar\n                })\n                setLoad(true);\n                }\n            })\n            .catch( () => {\n                setLoad(false);\n            });\n    },[]);\n\n    return (\n        <UserContext.Provider value={user.avatar+'*'+user.name}> {/* Deserialize the string*/}\n            {loaded === true\n                ?  <App/>  \n                : <Login/>\n            }\n        </UserContext.Provider> \n    )\n}\nexport default Home;\n","import React from 'react';\nimport Login from './components/login/login'\nimport Home from './Home';\nimport {\n    Switch,\n    Route,\n    withRouter\n} from \"react-router-dom\";\n\nconst Fusion = () =>{\n    return (\n        <>\n            <Switch>\n                <Route exact path=\"/static/login/\" \n                    component={withRouter(Login)}/>\n                <Route path=\"/\"\n                    component={withRouter(Home)}/>\n            </Switch>\n        </>\n    )\n};\nexport default Fusion;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Fusion from './Fusion';\nimport { createBrowserHistory } from \"history\";\nimport {\n     Router\n} from \"react-router-dom\";\n\nconst appHistory = createBrowserHistory();\nReactDOM.render(\n  <React.StrictMode>\n  <Router history={appHistory}>      \n      <Fusion/>\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}